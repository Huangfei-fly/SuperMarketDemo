<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.Luo.dao.CommodityMapper">
  <resultMap id="BaseResultMap" type="com.Luo.bean.Commodity">
    <id column="com_ID" jdbcType="VARCHAR" property="comId" />
    <result column="com_Name" jdbcType="VARCHAR" property="comName" />
    <result column="sell_Price" jdbcType="REAL" property="sellPrice" />
    <result column="purchase_Price" jdbcType="REAL" property="purchasePrice" />
    <result column="stock_Num" jdbcType="INTEGER" property="stockNum" />
    <result column="warning_Num" jdbcType="INTEGER" property="warningNum" />
    <result column="warehouse_Id" jdbcType="VARCHAR" property="warehouseId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    com_ID, com_Name, sell_Price, purchase_Price, stock_Num, warning_Num, warehouse_Id
  </sql>
  <select id="selectByExample" parameterType="com.Luo.bean.CommodityExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from commodity
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from commodity
    where com_ID = #{comId,jdbcType=VARCHAR}
  </select>
  <select id="selectByWare" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from commodity
    where warehouse_ID = #{warehouseId,jdbcType=VARCHAR}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from commodity
    where com_ID = #{comId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.Luo.bean.CommodityExample">
    delete from commodity
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.Luo.bean.Commodity">
    insert into commodity (com_ID, com_Name, sell_Price, 
      purchase_Price, stock_Num, warning_Num, 
      warehouse_Id)
    values (#{comId,jdbcType=VARCHAR}, #{comName,jdbcType=VARCHAR}, #{sellPrice,jdbcType=REAL}, 
      #{purchasePrice,jdbcType=REAL}, #{stockNum,jdbcType=INTEGER}, #{warningNum,jdbcType=INTEGER}, 
      #{warehouseId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.Luo.bean.Commodity">
    insert into commodity
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="comId != null">
        com_ID,
      </if>
      <if test="comName != null">
        com_Name,
      </if>
      <if test="sellPrice != null">
        sell_Price,
      </if>
      <if test="purchasePrice != null">
        purchase_Price,
      </if>
      <if test="stockNum != null">
        stock_Num,
      </if>
      <if test="warningNum != null">
        warning_Num,
      </if>
      <if test="warehouseId != null">
        warehouse_Id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="comId != null">
        #{comId,jdbcType=VARCHAR},
      </if>
      <if test="comName != null">
        #{comName,jdbcType=VARCHAR},
      </if>
      <if test="sellPrice != null">
        #{sellPrice,jdbcType=REAL},
      </if>
      <if test="purchasePrice != null">
        #{purchasePrice,jdbcType=REAL},
      </if>
      <if test="stockNum != null">
        #{stockNum,jdbcType=INTEGER},
      </if>
      <if test="warningNum != null">
        #{warningNum,jdbcType=INTEGER},
      </if>
      <if test="warehouseId != null">
        #{warehouseId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.Luo.bean.CommodityExample" resultType="java.lang.Long">
    select count(*) from commodity
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update commodity
    <set>
      <if test="record.comId != null">
        com_ID = #{record.comId,jdbcType=VARCHAR},
      </if>
      <if test="record.comName != null">
        com_Name = #{record.comName,jdbcType=VARCHAR},
      </if>
      <if test="record.sellPrice != null">
        sell_Price = #{record.sellPrice,jdbcType=REAL},
      </if>
      <if test="record.purchasePrice != null">
        purchase_Price = #{record.purchasePrice,jdbcType=REAL},
      </if>
      <if test="record.stockNum != null">
        stock_Num = #{record.stockNum,jdbcType=INTEGER},
      </if>
      <if test="record.warningNum != null">
        warning_Num = #{record.warningNum,jdbcType=INTEGER},
      </if>
      <if test="record.warehouseId != null">
        warehouse_Id = #{record.warehouseId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update commodity
    set com_ID = #{record.comId,jdbcType=VARCHAR},
      com_Name = #{record.comName,jdbcType=VARCHAR},
      sell_Price = #{record.sellPrice,jdbcType=REAL},
      purchase_Price = #{record.purchasePrice,jdbcType=REAL},
      stock_Num = #{record.stockNum,jdbcType=INTEGER},
      warning_Num = #{record.warningNum,jdbcType=INTEGER},
      warehouse_Id = #{record.warehouseId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.Luo.bean.Commodity">
    update commodity
    <set>
      <if test="comName != null">
        com_Name = #{comName,jdbcType=VARCHAR},
      </if>
      <if test="sellPrice != null">
        sell_Price = #{sellPrice,jdbcType=REAL},
      </if>
      <if test="purchasePrice != null">
        purchase_Price = #{purchasePrice,jdbcType=REAL},
      </if>
      <if test="stockNum != null">
        stock_Num = #{stockNum,jdbcType=INTEGER},
      </if>
      <if test="warningNum != null">
        warning_Num = #{warningNum,jdbcType=INTEGER},
      </if>
      <if test="warehouseId != null">
        warehouse_Id = #{warehouseId,jdbcType=VARCHAR},
      </if>
    </set>
    where com_ID = #{comId,jdbcType=VARCHAR}
  </update>
  <update id="supply" parameterType="com.Luo.bean.Commodity">
    update commodity
    set stock_Num = stock_Num - #{supplyNum,jdbcType=INTEGER}
    where com_ID = #{comId,jdbcType=VARCHAR} and warehouse_ID = #{warehouseId,jdbcType=VARCHAR}
  </update>
  
  <update id="purchase" parameterType="com.Luo.bean.Commodity">
    update commodity
    set stock_Num = stock_Num + #{purchaseNum,jdbcType=INTEGER}
    where com_ID = #{comId,jdbcType=VARCHAR} and warehouse_ID = #{warehouseId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.Luo.bean.Commodity">
    update commodity
    set com_Name = #{comName,jdbcType=VARCHAR},
      sell_Price = #{sellPrice,jdbcType=REAL},
      purchase_Price = #{purchasePrice,jdbcType=REAL},
      stock_Num = #{stockNum,jdbcType=INTEGER},
      warning_Num = #{warningNum,jdbcType=INTEGER},
      warehouse_Id = #{warehouseId,jdbcType=VARCHAR}
    where com_ID = #{comId,jdbcType=VARCHAR}
  </update>
</mapper>